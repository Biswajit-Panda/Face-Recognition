# -*- coding: utf-8 -*-
"""face-recognition-example

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y6hZUGcVu8OMzxUhPNcfO7mxnuWGVFcs
"""

# Commented out IPython magic to ensure Python compatibility.
import cv2
import dlib
import matplotlib.pyplot as plt
# %matplotlib inline

!git clone https://github.com/italojs/facial-landmarks-recognition.git

img = cv2.imread('/content/drive/My Drive/Colab Notebooks/kanha032.jpg')

plt_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.imshow(plt_img)

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
plt_gray = cv2.cvtColor(gray, cv2.COLOR_BGR2RGB)
plt.imshow(plt_gray)

detector = dlib.get_frontal_face_detector()
faces = detector(gray)

for face in faces:
  x1 = face.left()
  y1 = face.top()
  x2 = face.right()
  y2 = face.bottom()

  cv2.rectangle(img=img, pt1=(x1,y1), pt2=(x2,y2), color=(255,0,0), thickness=5)

plt_face = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.imshow(plt_face)

cv2.imwrite('/content/drive/My Drive/Colab Notebooks/sq_kanha.jpg', img)

cv2.imwrite('/content/drive/My Drive/Colab Notebooks/plt_face.jpg',plt_face)

print(faces)

predictor = dlib.shape_predictor("/content/facial-landmarks-recognition/shape_predictor_68_face_landmarks.dat")

a = None
for face in faces:
  x1 = face.left()
  y1 = face.top()
  x2 = face.right()
  y2 = face.bottom()

  landmarks = predictor(image=gray, box=face)
  for n in range(0,68):
    x = landmarks.part(n).x
    y = landmarks.part(n).y

    cv2.circle(img=img, center=(x, y), radius=11, color=(0,255,0), thickness=-1)

point_img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)
plt.imshow(point_img)

cv2.imwrite('/content/drive/My Drive/Colab Notebooks/kanha_img_dotes.jpg',img)

